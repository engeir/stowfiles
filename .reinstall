#!/usr/bin/env bash

usage() {
    echo "Usage: $0 <package-manager>"
    echo "Supported package managers:"
    echo "  tlmgr"
    echo "  cargo"
    echo "  uv"
    echo "  apt"
    echo "  pacstall"
    echo "  go"
    echo "  flatpak"
    echo "  snap"
    exit 0
}
# If -h or --help is passed as an argument, print usage and exit
[[ $1 == "-h" || $1 == "--help" ]] && usage
[[ $# -eq 0 ]] && usage
# Check if an accepted language package provider is used as first argument
run-installer() {
    echo "No installer has been set up yet."
}
case "$1" in
    "tlmgr")
        run-installer() {
            tlmgr-install
        }
        ;;
    "cargo") ;;
    "uv")
        run-installer() {
            uv-install
        }
        ;;
    "apt")
        run-installer() {
            apt-get-install
        };;
    "pacstall") ;;
    "go") ;;
    "flatpak") ;;
    "snap") ;;
    *)
        echo "$1 is not a valid package manager"
        exit 1
        ;;
esac
unameOut="$(uname -s)"
case "$unameOut" in
    Linux*) file=INSTALLED-linux.md ;;
    Darwin*) file=INSTALLED-mac.md ;;
    *)
        echo "No INSTALLED file for $unameOut"
        exit 0
        ;;
esac

list="$(sed -n '/^```txt {'"$1"'}/,/^```/ p' <"$file" | sed '/^```/ d')"
tlmgr-install() {
    # Do shit
    present="$(tlmgr list --only-installed)"
    not_installed="$(diff <(echo "$list") <(echo "$present") | grep -E '^<' | sed 's/^< //')"
    # Check if list is empty
    [[ -z $not_installed ]] && exit 0
    # Loop over each line of the list
    while IFS= read -r line; do
        package="$(echo "$line" | awk '{print $2}' | sed 's/://')"
        echo "Installing $package"
        tlmgr install "$package"
    done <<<"$not_installed"
}
uv-install() {
    # present="$(uv tool list | sed 's/- .*//' | sed '/^$/d' | sed 's/\s.*//')"
    present="$(uv tool list | sed 's/- .*//' | sed '/^$/d')"
    not_installed="$(diff <(echo "$list") <(echo "$present") | grep -E '^<' | sed 's/^< //')"
    # Check if list is empty
    [[ -z $not_installed ]] && exit 0
    # Loop over each line of the list
    while IFS= read -r line; do
        package="$(echo "$line" | awk '{print $1}' | sed 's/://')"
        echo "Installing $package"
        uv tool install "$package"
    done <<<"$not_installed"
}
nala-install-search() {
    package_name=$1
    if sudo nala install -y "$package_name"; then
        echo "Package '$package_name' installed successfully."
    else
        echo "Package '$package_name' not found. Searching for similar..."
        closest_match="$(apt-cache search "$package_name" | awk '{print $1}' | head -n 1)"
        if [ -n "$closest_match" ];then
            read -p "Did you mean '$closest_match'? [Y/n] " response
            response=${response,,}
            if [[ "$response" == "y" || "$response" == "" ]]; then
                sudo nala install -y "$closest_match"
            else
                echo "No package installed"
            fi
        else
            echo "No similar package found."
        fi
    fi
}
apt-get-install() {
    present="$(nala list -i | grep '^[a-z,A-Z]' | awk '{print $1}')"
    not_installed="$(diff <(echo "$list" | awk '{print $1}') <(echo "$present") | grep -E '^<' | sed 's/^< //')"
    [[ -z $not_installed ]] && exit 0
    # sudo nala install "$not_installed"
    while IFS= read -r line; do
        echo "Installing $line"
        nala-install-search "$line"
    done <<<"$not_installed"
}
run-installer
