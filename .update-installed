#!/bin/bash

# Updates a file called INSTALLED.md.
unameOut="$(uname -s)"
case "$unameOut" in
Linux*) machine=Linux ;;
Darwin*) machine=Mac ;;
CYGWIN*) machine=Cygwin ;;
MINGW*) machine=MinGw ;;
*)
    machine="UNKNOWN:${unameOut}"
    ;;
esac

echo_and_run() {
    echo ""
    echo "\$ $*"
    "$@"
}
run-updates() {
    echo_and_run cargo install-update -a
    echo_and_run pipx upgrade-all
    echo_and_run gup update
    if [ "Mac" = "$1" ]; then
        echo_and_run brew update
        echo_and_run brew upgrade
    fi
    if [ "Linux" = "$1" ]; then
        echo_and_run sudo nala update
        echo_and_run sudo nala upgrade
        echo_and_run pacstall -Up -P
        echo_and_run sudo snap refresh
        echo_and_run flatpak update
    fi
}

try-fix-ppa() {
    if [[ "$machine" == "Linux" ]]; then
        echo "It you have an issue with apt/apt-get, where you get something like:"
        echo "E: The repository 'https://ppa.launchpadcontent.net/fontforge/fontforge/ubuntu jammy Release' does not have a Release file."
        echo "see https://askubuntu.com/a/1163224."
        echo "You might have success trying the equivalent of"
        echo "\$ sudo add-apt-repository --remove ppa:fontforge/fontforge"
    else
        echo "This is only available on Linux-based systems."
    fi
}

# Handle options
while getopts 'ufh' OPTION; do
    case "$OPTION" in
    u)
        run-updates "$machine"
        ;;
    f)
        try-fix-ppa
        exit 0
        ;;
    h)
        printf "Script usage: %s [-u] [-h]\n\t-u\tRun all update commands\n\t-h\tPrint this help and exit\n" "$(basename "$0")" >&2
        exit 0
        ;;
    ?)
        printf "Script usage: %s [-u] [-h]\n\t-u\tRun all update commands\n\t-h\tPrint this help and exit\n" "$(basename "$0")" >&2
        exit 1
        ;;
    esac
done
# shift "$((OPTIND - 1))"

# Run MacOS updates
if [ "Mac" = "$machine" ]; then
    BREW="$(brew list --versions)"
    CARGO="$(cargo install --list)"
    PIPX="$(pipx list | sed '1,2d' | sed 's/^   //')"
    GO="$(gup list)"
    echo "# Installed programs

## Brew

\`\`\`txt
$BREW
\`\`\`

## Cargo

\`\`\`txt
$CARGO
\`\`\`

## Pipx

\`\`\`txt
$PIPX
\`\`\`

## Go

\`\`\`txt
$GO
    \`\`\`" >"./INSTALLED-mac.md"
fi

# Run Linux updates
if [ "Linux" = "$machine" ]; then
    APT="$(nala list -i | grep '^[a-z,A-Z]')"
    # Thanks to https://stackoverflow.com/a/18000433, formatting is removed
    PACSTALL="$(pacstall -L | xargs -L 1 pacstall -Qi 2>/dev/null | grep -E 'name|version' | paste -d ' ' - - | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g")"
    CARGO="$(cargo install --list)"
    PIPX="$(pipx list | sed '1,2d' | sed 's/^\s\s\s//')"
    GO="$(gup list)"
    FLAT="$(paste <(
        echo "Name"
        flatpak list --columns=name
    ) <(
        echo "Version"
        flatpak list --columns=version
    ) <(
        echo "Branch"
        flatpak list --columns=branch
    ) | pr -t -e40)"
    SNAP="$(snap list)"
    echo "# Installed programs

## Apt

\`\`\`txt
$APT
\`\`\`

## Pacstall

\`\`\`txt
$PACSTALL
\`\`\`

## Cargo

\`\`\`txt
$CARGO
\`\`\`

## Pipx

\`\`\`txt
$PIPX
\`\`\`

## Go

\`\`\`txt
$GO
\`\`\`

## Flatpak

\`\`\`txt
$FLAT
\`\`\`

## Snap

\`\`\`txt
$SNAP
    \`\`\`" >"./INSTALLED-linux.md"
fi
