#!/bin/bash

# Usage
#
# Make this script executable and place it on your PATH, say
# `/$HOME/bin/open-custom-url`. Then, place the following desktop entry somewhere, say
# in `$HOME/.local/share/applications/open-custom-url.desktop`:
#
# [Desktop Entry]
# Version=1.0
# Name=Browser Router
# Exec=/home/local-lafadm/bin/open-custom-url %u
# Terminal=false
# Type=Application
# MimeType=x-scheme-handler/unknown;x-scheme-handler/about;text/html;x-scheme-handler/http;x-scheme-handler/https;
#
# Finally, run
#
#     xdg-settings set default-web-browser open-custom-url.desktop
#
# from the same directory as the desktop script. Now, all domains that you place inside
# of `$HOME/.local/share/open-custom-url/firefox_domains.txt` will be opened in Firefox,
# while the rest is opened in $DEFAULT_BROWSER.
#
# nrk.no
# vg.no
# vivaldi.com

DEFAULT_BROWSER="zen-browser"

# Path to the directory containing domains files
DOMAIN_FILE_PATH="$HOME/.local/share/open-custom-url"
mkdir -p "$DOMAIN_FILE_PATH"

# Get the URL passed to the script
URL="$1"

# Extract the domain from the URL
DOMAIN=$(echo "$URL" | awk -F[/:] '{print $4}')

# Flag to indicate if a browser was found for the domain
FOUND_BROWSER=false

# Loop through all domain files in the directory
for DOMAIN_FILE in "$DOMAIN_FILE_PATH"/*_domains.txt; do
    # Extract the browser name from the filename
    BROWSER=$(basename "$DOMAIN_FILE" _domains.txt)

    # Check if the domain is in the current domains list
    if grep -q "$DOMAIN" "$DOMAIN_FILE"; then
        # Open with the corresponding browser
        "$BROWSER" "$URL"
        FOUND_BROWSER=true
        break
    fi
done

# If no matching browser was found, use the default browser
if [ "$FOUND_BROWSER" = false ]; then
    "$DEFAULT_BROWSER" "$URL"
fi
