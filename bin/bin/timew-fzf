#!/usr/bin/env bash

if ! command -v timew >/dev/null; then
    echo "The command $(timew) does not exist on your system."
    echo "See https://timewarrior.net/ for installation instructions."
    exit 1
fi

menu=(
    "start"
    "stop"
)
tags=(
    "LEARN"
    "ANSIBLE"
    "PUPPET"
    "SATELLITE"
    "TIME-WASTE"
    "new"
)
get-running-tags() {
    if timew >/dev/null 2>&1; then
        # There is active time tracking
        timew | grep -i "tracking" | sed 's/Tracking //'
    else
        # There is no active time tracking
        echo ""
    fi
}
get-all-tags() {
    timew tags | tail -n +4 | awk '{print $1}'
}
start-func() {
    STARTING=$(cat <(get-all-tags) <(printf "%s\n" "${tags[@]}") | tr " " "\n" | sed '/^$/d' | sort | uniq | gum filter --no-limit)
    if [[ $STARTING == "" ]]; then
        exit 0
    fi
    if grep -q "new" <(echo "$STARTING"); then
        NEW_TAG=$(gum input --cursor.foreground 212 --prompt.foreground 212 --prompt "Enter a new tag name: " --placeholder "New tag" | sed 's/ //g')
        if [[ $NEW_TAG == "" ]]; then
            gum format -- "Cannot have empty tags..."
            exit 1
        fi
        STARTING=$(sed "s/new/${NEW_TAG^^}/" <(echo "$STARTING") | sed 's/\"//g')
    fi
    gum format -- "# Successfully started"

    mapfile -t tags_array <<<"$STARTING"
    # Run timew with each element as a separate, properly quoted argument
    timew start "${tags_array[@]}" \
        | gum style \
            --foreground 212 --border-foreground 212 --border double \
            --align center --width 50 --margin "1 2" --padding "2 4"
    gum confirm "Bye!"
}
stop-func() {
    if [[ "$(get-running-tags)" == "" ]]; then
        echo "No currently running time tracking."
        exit 0
    fi
    STOPPING=$(cat <(get-running-tags) <(echo "all") | tr " " "\n" | gum filter --no-limit)
    if [[ $STOPPING == "" ]]; then
        exit 0
    fi
    if echo "$STOPPING" | grep -q "all"; then
        timew stop \
            | gum style \
                --foreground 212 --border-foreground 212 --border double \
                --align center --width 50 --margin "1 2" --padding "2 4"
        gum confirm "Bye!"
        exit 0
    fi
    timew stop "$STOPPING" \
        | gum style \
            --foreground 212 --border-foreground 212 --border double \
            --align center --width 50 --margin "1 2" --padding "2 4"
    gum confirm "Bye!"
}

# === Main program

CURRENT_TAGS=$(get-running-tags)

output="# Welcome to Time Warrior TUI\n\n"

if [[ -z $CURRENT_TAGS ]]; then
    output+="There are currently no tags being tracked."
else
    output+="These tags are currently being tracked:\n"
    # split into a real array
    read -r -a tag_array <<<"$CURRENT_TAGS"
    for tag in "${tag_array[@]}"; do
        output+="- $tag\n"
    done
fi

printf '%b' "$output" | gum format

if gum confirm --affirmative="Start" --negative="Stop" ""; then
    CMD_MODE="start"
else
    CMD_MODE="stop"
fi

case "$CMD_MODE" in
    start)
        start-func
        ;;
    stop)
        stop-func
        ;;
    *)
        exit 1
        ;;
esac
