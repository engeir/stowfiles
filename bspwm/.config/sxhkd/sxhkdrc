#
# wm independent hotkeys
#
# To get hints in a cheat sheet, write commands on the form: (note the not-indented
# comment)
# key-command
# # Explanaition
#     command
#

super + Return
# terminal emulator
	alacritty
	# st
	# gnome-terminal

super + b
	firefox

alt + @space
# program launcher
	dmenu_run
	# dmenu_run -nb '#000000' -nf "#3CB371" -sb "#3CB371" -fn 3
	# dmenu_run -nb '#000000' -nf "#00008B" -sb "#00008B" -fn 3

# ctrl_r + @space
# # Laumch with cerebro
# 	/home/een023/.local/bin/Cerebro-0.11.0.AppImage &

super + alt + x
# Run custom scripts
	~/bin/custom_scripts &
super + alt + g
# Git conventions cheat sheet
	~/bin/git-conventions &
super + alt + p
	~/bin/pdf_open &
	# ~/.config/sxhkd/display.sh
super + alt + w
	~/bin/word-lookup.sh &
super + alt + b
	~/bin/new-bookmark.sh &
super + alt + t
	~/bin/type-bookmark.sh &
super + alt + d
	~/bin/delete-bookmark.sh &
super + alt + f
	farge &
# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# start surf in tabbed
super + alt + Escape
	tabbed -c surf -e

##---------- Tabbed Containers ----------##
# See https://github.com/albertored11/bsptab

# add to tabbed container
ctrl + alt + {Left,Down,Up,Right}
	tabc attach $(bspc query -N -n) {$(bspc query -N -n west),$(bspc query -N -n south),$(bspc query -N -n north),$(bspc query -N -n east)}

# create/remove from tabbed container
super + z
	id=$(bspc query -N -n); \
	[[ "$(tabc printclass $id)" == "tabbed" ]] \
	&& tabc detach $id \
	|| tabc create $id

# toggle autoattach in tabbed container
super + shift + z
	tabc autoattach $(bspc query -N -n)

##---------- Rofi Launcher & Menus ----------##

# Rofi App Launcher
super + @space
	rofi -show drun -theme $HOME/programs/command_line_apps/rofi-collection/nord/nord.rasi
	# sh ~/.config/bspwm/rofi/bin/launcher
super + alt + @space
	popup-mac ~/bin/launcher
	# ~/.config/rofi/launchers/misc/launcher.sh &
# super + {_,alt +} d
#     rofi -show {window,run} -theme $HOME/programs/command_line_apps/rofi-collection/nord/nord.rasi
super + d
	rofi -show window -theme $HOME/programs/command_line_apps/rofi-collection/nord/nord.rasi
# # Rofi Network Menu (nmd is not installed)
# super + n
# 	nmd

# TODO: fix color schemes
# # Rofi Menus
# super + {a,x,r}
# 	sh ~/.config/bspwm/rofi/bin/{mpd,powermenu,asroot}

# ctrl + alt + {s,n,t}
# 	sh ~/.config/bspwm/rofi/bin/{screenshot,network,themes}

##---------- System ----------##

# Take a screenshot
Print
	scrot 'Screenshot_%Y-%m-%d-%S_$wx$h.png' -e 'mv $f $$(xdg-user-dir PICTURES)/Pictures/Screenshots ; nsxiv $$(xdg-user-dir PICTURES)/Pictures/Screenshots/$f'

# Take a screenshot in 5 second
alt + Print
	scrot -d 5 'Screenshot_%Y-%m-%d-%S_$wx$h.png' -e 'mv $f $$(xdg-user-dir PICTURES)/Pictures/Screenshots ; nsxiv $$(xdg-user-dir PICTURES)/Pictures/Screenshots/$f'
	# scrot -d 5 'Screenshot_%Y-%m-%d-%S_$wx$h.png' -e 'mv $f $$(xdg-user-dir PICTURES)/Pictures/Screenshots ; viewnior $$(xdg-user-dir PICTURES)/Pictures/Screenshots/$f'

# # Brightness control
# XF86MonBrightness{Up,Down}
# 	backlight{-up,-down}

# Volume control
XF86Audio{RaiseVolume,LowerVolume,Mute}
	~/.config/sxhkd/volume.sh {up,down,mute}
	# volume{-up,-down}

XF86AudioMute
	amixer set Master toggle

# Music control
XF86Audio{Next,Prev,Play,Stop}
	mpc {next,prev,toggle,stop}

#
# bspwm hotkeys
#

# quit/restart bspwm
# Also, remap CAPS LOCK to ESC and increase the speed of the keys
super + alt + {q,r}
	bspc {quit,wm -r}; \
	setxkbmap -option ctrl:nocaps; \
	xcape -e 'Control_L=Escape' \
	xset r rate 210 40 \
	xrdb "$HOME/.config/Xresources"


# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# kill
ctrl + alt + Escape
	xkill

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

# Hide Window
super + u
	bspc node focused -g hidden=on
	# winmask

super + alt + u
	bspwm-hidden

super + alt + {a,s}
	bash ~/.config/alacritty/toggle_alacritty_opacity {u,d} &

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + alt + {i,o}
	bspc desktop -f {prev,next}.local

# focus the next/previous monitor
super + alt + shift + {i,o}
	bspc monitor -f {prev,next}

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# focus or send to the given desktop of the focused monitor
super + alt + {_,ctrl + }{1-9,0}
	bspc {desktop -f,node -d} '{1-9,10}'.local

# send to the given desktop of the next monitor
super + shift + alt + {1-9,0}
	D={1-9,10}; \
	bspc node -d "$(bspc query -D -m next | sed -n "$D p")"

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Gap presets
super + shift + {i,o}
	SELECT={0,2}; if [[ "$SELECT" == "2" ]]; then SELECT2=5; else SELECT2=0; fi; \
	bspc config -d focused window_gap "$SELECT2" && \
	bspc config -d focused border_width "$SELECT"

#
# my additions
#
#super + {_,shift + } d
#	{rofis || rofi -show run,lighthouse | sh}
##,dmenu_run -i -p "Search: "}

# Brightness
XF86MonBrightness{Up,Down}
	brightnessctl s 10%{+,-}

# # Mutes
# XF86AudioMute
#     pulsemixer --toggle-mute

# XF86Audio{Prev,Next}
#      mpc -q {prev,next}


# XF86AudioPlay
#      mpc -q toggle

# XF86Audio{Raise,Lower}Volume
#     pulsemixer --change-volume {+,-}10
