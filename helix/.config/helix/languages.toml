[[language]]
name = "python"
auto-format = false
language-servers = [
  { name = "jedi-language-server" },
  { name = "ruff-lsp" },
  # { name = "ruff" },
]
# formatter = { command = "black", args = [ "--line-length", "88", "--quiet", "-", ] }
# formatter = { command = "ruff", args = ["format", "-"] }

[language-server.jedi-language-server]
command = "jedi-language-server"
args = []
config = {}

[language-server.ruff-lsp]
command = "ruff-lsp"
args = []
config = { settings = { args = [] } }

[[language]]
name = "latex"
text-width = 130

# [auto-pairs]
# '\'.'(' = '\)'

[language-server.texlab.config.texlab]
formatterLineLength = -1 # bib files
latexindent = { modifyLineBreaks = true }

[language-server.texlab.config.texlab.build]
onSave = true
forwardSearchAfter = false

[language-server.texlab.config.texlab.forwardSearch]
executable = "zathura"
args = ["--synctex-forward", "%l:1:%f", "%p"]
# latexmk does something much more complicated that actually works
# args = [ "-x", "nvim", "--headless", "-c", '"VimtexInverseSearch Â½{line} '%{input}'"', "--synctex-forward", "%l:1:%f", "%p"]

[language-server.texlab.config.texlab.chktex]
onEdit = true
onOpenAndSave = true

[language-server.texlab.config.texlab.experimental]
followPackageLinks = true
labelReferenceCommands = ["subref"]
citationCommands = ["citeA"]
mathEnvironments = ["align*", "equation"]

[[language]]
name = "markdown"
formatter = { command = "dprint", args = ["fmt", "--stdin", "md"] }

[[language]]
name = "go"
auto-format = false

# introduce new language server
[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 20 # set max completion results len for each group: words, snippets, unicode-input
snippets_first = true # completions will return before snippets by default
feature_words = true # enable completion by word
feature_snippets = true # enable snippets
feature_unicode_input = true # enable "unicode input"
feature_paths = true # enable path completion

# write logs to /tmp/completion.log
[language-server.scls.environment]
RUST_LOG = "info,simple-completion-langauge-server=info"
LOG_FILE = "/tmp/completion.log"

# append langage server to existed languages
[[language]]
name = "rust"
language-servers = ["scls", "rust-analyzer"]

[[language]]
name = "git-commit"
language-servers = ["scls"]

[[language]]
name = "latex"
language-servers = ["scls", "texlab"]

# etc..

# introduce a new language to enable completion on any doc by forcing set language with :set-language stub
[[language]]
name = "stub"
scope = "text.stub"
file-types = []
shebangs = []
roots = []
auto-format = false
language-servers = ["scls"]
